#default controls for manager
querying.processes=terrierql:TerrierQLParser,parsecontrols:TerrierQLToControls,parseql:TerrierQLToMatchingQueryTerms,matchopql:MatchingOpQLParser,applypipeline:ApplyTermPipeline,localmatching:LocalManager$ApplyLocalMatching,qe:QueryExpansion,labels:org.terrier.learning.LabelDecorator,filters:LocalManager$PostFilterProcess,decorate:SimpleDecorateProcess
#default controls for the web-based interface. SimpleDecorate
#is the simplest metadata decorator. For more control, see Decorate.
querying.postfilters=decorate:SimpleDecorate,site:SiteFilter,scope:Scope

#default and allowed controls
querying.default.controls=wmodel:DPH,parsecontrols:on,parseql:on,applypipeline:on,terrierql:on,localmatching:on,filters:on,decorate:on
querying.allowed.controls=scope,qe,qemodel,start,end,site,scope

#document tags specification
#for processing the contents of
#the documents, ignoring DOCHDR
#TrecDocTags.doctag=DOC
#TrecDocTags.idtag=DOCNO
#TrecDocTags.skip=DOCHDR
#set to true if the tags can be of various case
#TrecDocTags.casesensitive=false
#starting from Terrier 5.3, we assume that documents are in UTF-8
#trec.encoding=UTF-8

#query tags specification
TrecQueryTags.doctag=TOP
TrecQueryTags.idtag=NUM
TrecQueryTags.process=TOP,NUM,TITLE
TrecQueryTags.skip=DESC,NARR

#the processing stages a term goes through
termpipelines=Stopwords,PorterStemmer

trec.collection.class=SimpleXMLCollection
#xml.blacklist.docids
xml.doctag=doc
xml.idtag=title
xml.terms=title,abstract,url,links

#TRECWebCollection uses TaggedDocument to generate abstracts
    # We will save two abstracts named 'title' and 'body'
    TaggedDocument.abstracts=abstract,title
    # The tags from which to save the text. ELSE is special tag name, which means anything not consumed by other tags.
    TaggedDocument.abstracts.tags=title,abstract
    # Should the tags from which we create abstracts be case-sensitive?
    TaggedDocument.abstracts.tags.casesensitive=false
    # The max lengths of the abstracts. Abstracts will be cropped to this length. Defaults to empty.
    TaggedDocument.abstracts.lengths=2560,2048

    # If the document class had been a FileDocument then we would use different properties, e.g.
    # FileDocument.abstract=title
    # FileDocument.abstract.length=256

    # We also need to tell the indexer to store the abstracts generated
    # In addition to the docno, we also need to move the 'title' and 'abstract' abstracts generated to the meta index
    indexer.meta.forward.keys=title,abstract,url,anchor
    # The maximum lengths for the meta index entries.
    indexer.meta.forward.keylens=2560,2560,1048,2048
    # We will not be doing reverse lookups using the abstracts and so they are not listed here.
    #indexer.meta.reverse.keys=title